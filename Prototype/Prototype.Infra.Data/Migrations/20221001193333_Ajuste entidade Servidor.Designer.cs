// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prototype.Infra.Data;

namespace Prototype.Infra.Data.Migrations
{
    [DbContext(typeof(PrototypeDataContext))]
    [Migration("20221001193333_Ajuste entidade Servidor")]
    partial class AjusteentidadeServidor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Prototype.Domain.Entities.Documento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Categoria")
                        .HasColumnName("Categoria")
                        .HasColumnType("int");

                    b.Property<string>("CategoriaDescicao")
                        .HasColumnName("CategoriaDescicao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileAsBase64")
                        .IsRequired()
                        .HasColumnName("Arquivo_Base64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("FileAsByteArray")
                        .IsRequired()
                        .HasColumnName("Bytes")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnName("Nome_Arquivo")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("FileSize")
                        .IsRequired()
                        .HasColumnName("Tamanho_Arquivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Tipo")
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("application/pdf");

                    b.Property<DateTime>("LastModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Ultima_Modificacao")
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 1, 16, 33, 33, 516, DateTimeKind.Local).AddTicks(4910));

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ServidorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ServidorId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ServidorId");

                    b.HasIndex("ServidorId1");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("Prototype.Domain.Entities.ProcessoTramitacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataTramitacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Data_Tramitacao")
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 10, 1, 16, 33, 33, 530, DateTimeKind.Local).AddTicks(2501));

                    b.Property<Guid?>("DocumentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ServidorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SetorDestino")
                        .HasColumnName("Setor_Destino")
                        .HasColumnType("int");

                    b.Property<string>("SetorDestinoDescricao")
                        .HasColumnName("Setor_Destino_Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SetorOrigem")
                        .HasColumnName("Setor_Origem")
                        .HasColumnType("int");

                    b.Property<string>("SetorOrigemDescricao")
                        .HasColumnName("Setor_Origem_Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioMovimentacao")
                        .IsRequired()
                        .HasColumnName("Usuario")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("DocumentoId");

                    b.HasIndex("ServidorId");

                    b.ToTable("Tramitacao");
                });

            modelBuilder.Entity("Prototype.Domain.Entities.Servidor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnName("CPF")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnName("Matricula")
                        .HasColumnType("nvarchar(40)")
                        .HasMaxLength(40);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("Nome")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("Orgao")
                        .IsRequired()
                        .HasColumnName("Orgao")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SetorDescricao")
                        .HasColumnName("SetorDescricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SetorTramitacao")
                        .HasColumnName("Setor_Atual")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Servidores");
                });

            modelBuilder.Entity("Prototype.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100)
                        .HasDefaultValue("admin@prototype.com");

                    b.Property<string>("Login")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Login")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50)
                        .HasDefaultValue("Admin");

                    b.Property<string>("Password")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Password")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15)
                        .HasDefaultValue("123456");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Prototype.Domain.Entities.Documento", b =>
                {
                    b.HasOne("Prototype.Domain.Entities.Servidor", "Servidor")
                        .WithMany()
                        .HasForeignKey("ServidorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prototype.Domain.Entities.Servidor", null)
                        .WithMany("Documentos")
                        .HasForeignKey("ServidorId1");
                });

            modelBuilder.Entity("Prototype.Domain.Entities.ProcessoTramitacao", b =>
                {
                    b.HasOne("Prototype.Domain.Entities.Servidor", "Documento")
                        .WithMany()
                        .HasForeignKey("DocumentoId");

                    b.HasOne("Prototype.Domain.Entities.Servidor", null)
                        .WithMany("Tramitacoes")
                        .HasForeignKey("ServidorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
